{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/Test/add-athlete/add-athlete.component.html","webpack:///./app/Test/add-athlete/add-athlete.component.ts","webpack:///./app/Test/create-test/create-test.component.html","webpack:///./app/Test/create-test/create-test.component.ts","webpack:///./app/Test/edit-athlete/edit-athlete.component.html","webpack:///./app/Test/edit-athlete/edit-athlete.component.ts","webpack:///./app/Test/shared/test.service.ts","webpack:///./app/Test/test-details/test-details.component.html","webpack:///./app/Test/test-details/test-details.component.ts","webpack:///./app/Test/test-list/test-list.component.html","webpack:///./app/Test/test-list/test-list.component.ts","webpack:///./app/Test/test.module.ts","webpack:///./app/User/shared/user.service.ts","webpack:///./app/User/user-edit/user-edit.component.html","webpack:///./app/User/user-edit/user-edit.component.ts","webpack:///./app/User/user-list/user-list.component.html","webpack:///./app/User/user-list/user-list.component.ts","webpack:///./app/User/user.module.ts","webpack:///./app/app.component.ts","webpack:///./app/app.html","webpack:///./app/app.module.ts","webpack:///./app/main.ts","webpack:///./environments/environment.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"margin-top: 3%; text-align: center;\\\">\\r\\n    <h3>Add Athlete To Test</h3>\\r\\n\\r\\n    <div class=\\\"container\\\" *ngFor=\\\"let test of TestDetails\\\" style=\\\"margin-top: 5%;\\\">\\r\\n        <div *ngIf=\\\"test.TestType.Name === 'Cooper Test'; then coopertest else sprinttest\\\"></div>\\r\\n\\r\\n        <ng-template #coopertest>\\r\\n            <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Athlete Name</label>\\r\\n                    <select id=\\\"name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"FormData.name\\\" class=\\\"form-control\\\" required>\\r\\n                        <option disabled selected> --Select-- </option>\\r\\n                        <option *ngFor=\\\"let athlete of AthleteDetails\\\"> {{ athlete.Name }} </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Distance</label>\\r\\n                    <input type=\\\"text\\\" id=\\\"distance\\\" name=\\\"distance\\\" #distance=\\\"ngModel\\\" [(ngModel)]=\\\"FormData.distance\\\" class=\\\"form-control\\\" required />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"athleteSubmit(TestId)\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template #sprinttest>\\r\\n            <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Athlete Name</label>\\r\\n                    <select id=\\\"name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"FormData.name\\\" class=\\\"form-control\\\" required>\\r\\n                        <option disabled selected> --Select-- </option>\\r\\n                        <option *ngFor=\\\"let athlete of AthleteDetails\\\"> {{ athlete.Name }} </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Time</label>\\r\\n                    <input type=\\\"text\\\" id=\\\"time\\\" name=\\\"time\\\" #time=\\\"ngModel\\\" [(ngModel)]=\\\"FormData.time\\\" class=\\\"form-control\\\" required />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"athleteSubmit(TestId)\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../shared/test.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CreateAthleteModel } from '../shared/testmodel.model';\r\n\n@Component({\n    selector: 'app-add-athlete',\n    templateUrl: './add-athlete.component.html',\n    styleUrls: []\n})\nexport class AddAthleteComponent implements OnInit {\n\n    TestId: number;\n    AthleteDetails: any[];\n    FormData: CreateAthleteModel;\n    TestDetails: any[];\n\n    constructor(private _testService: TestService, private _route: ActivatedRoute, private _router: Router) {\n        this.TestId = +this._route.snapshot.paramMap.get('id');\n    }\n\n    ngOnInit() {\n        this.FormData = {\n            name: '--Select--',\r\n            distance: 0,\r\n            time: 0\r\n        }\n\n        this._testService.getAthletes().subscribe(\n            res => {\n                console.log(res);\n                this.AthleteDetails = res as any[];\n            },\n            err => {\n                console.log(err);\n            })\n\n        this._testService.GetTestById(this.TestId).subscribe(\n            res => {\n                this.TestDetails = res as any[];\n            },\n            err => {\n                console.log(err);\n            })\n    }\n\n    athleteSubmit(id: number) {\n        this._testService.addAthlete(id, this.FormData).subscribe(\r\n            res => {\r\n                this._router.navigate(['/test-details/', this.TestId]);\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            })\r\n    }\n}\n","module.exports = \"\\r\\n<div class=\\\"jumbotron\\\" style=\\\"margin-top: 3%; text-align: center;\\\">\\r\\n    <h3>Create New Test</h3>\\r\\n\\r\\n    <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" style=\\\"margin-top: 5%;\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"id\\\" [value]=\\\"FormData.id\\\" hidden>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Test Date</label>\\r\\n            <input type=\\\"datetime-local\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"FormData.date\\\"\\r\\n                   class=\\\"form-control\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Test Type</label>\\r\\n            <select name=\\\"testtype\\\" #testtype=\\\"ngModel\\\" [(ngModel)]=\\\"FormData.testtype\\\" class=\\\"form-control\\\"\\r\\n                    style=\\\"margin-bottom: 3%;\\\" required>\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let test of TestType\\\"> {{ test.Name }} </option>\\r\\n            </select>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button class=\\\"btn btn-success btn-lg\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/test-list']\\\">back</a>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../shared/test.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { CreateTestModel } from '../shared/testmodel.model';\r\n\n@Component({\n    selector: 'app-create-test',\n    templateUrl: './create-test.component.html',\n    styleUrls: []\n})\nexport class CreateTestComponent implements OnInit {\n\n    TestType: any[];\n    FormData: CreateTestModel;\n\n    constructor(private _testService: TestService, private _route: Router) { }\n\n    ngOnInit() {\n        this.FormData = {\n            id : 0,\r\n            date: null,\r\n            testtype: ''\r\n        }\n\n        this._testService.GetTestTypes().subscribe(\n            res => {\n                this.TestType = res as any[];\n                console.log(this.TestType);\n            },\n            err => {\n                console.log(err);\n            })\n    }\n\n    onSubmit() {\n        this._testService.createTest(this.FormData).subscribe(\r\n            res => {\r\n                this._route.navigate(['/test-list']);\r\n                console.log(res);\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            })\r\n    }\n}\n","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"margin-top: 3%;\\\">\\r\\n    <h3>Edit Athlete</h3>\\r\\n    <div class=\\\"container\\\" *ngIf=\\\"toDisplay\\\" style=\\\"margin-top: 5%;\\\">\\r\\n        <div *ngIf=\\\"Athlete.CooperTestDistance !== null\\\">\\r\\n            <form (submit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"id\\\" [value]=\\\"Athlete.UserID\\\" hidden>\\r\\n                <input type=\\\"text\\\" name=\\\"id\\\" [value]=\\\"Athlete.TestID\\\" hidden>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Athlete Name</label>\\r\\n                    <input id=\\\"username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Athlete.Users.UserName\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Distance</label>\\r\\n                    <input id=\\\"coopertestdistance\\\" name=\\\"coopertestdistance\\\" #coopertestdistance=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Athlete.CooperTestDistance\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"Athlete.CooperTestDistance === null\\\">\\r\\n            <form (submit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"id\\\" [value]=\\\"Athlete.UserID\\\" hidden>\\r\\n                <input type=\\\"text\\\" name=\\\"id\\\" [value]=\\\"Athlete.TestID\\\" hidden>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Athlete Name</label>\\r\\n                    <input id=\\\"username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Athlete.Users.UserName\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Time</label>\\r\\n                    <input id=\\\"sprinttesttime\\\" name=\\\"sprinttesttime\\\" #sprinttesttime=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Athlete.SprintTestTime\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../shared/test.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-edit-athlete',\n    templateUrl: './edit-athlete.component.html',\n    styleUrls: []\n})\nexport class EditAthleteComponent implements OnInit {\n\n    TestId: number;\r\n    AthleteId: string;\r\n    Athlete: any;\r\n    toDisplay: boolean;\n\n    constructor(private _testService: TestService, private _route: ActivatedRoute, private _router: Router) {\n        this.toDisplay = false;\n    }\n\n    ngOnInit() {\n        this.TestId = +this._route.snapshot.paramMap.get('testId');\r\n        this.AthleteId = this._route.snapshot.paramMap.get('userId');\n\n        this._testService.getAthleteByTestId(this.TestId, this.AthleteId).subscribe(\n            res => {\n                this.Athlete = res;\n                this.toDisplay = true;\n                console.log(res);\n            },\n            err => {\n                console.log(err);\n            });\n    }\n\n    onSubmit() {\n        this._testService.editAthlete(this.TestId, this.AthleteId, this.Athlete).subscribe(\r\n            res => {\r\n                console.log(res);\r\n                this._router.navigate(['/test-details/', this.TestId]);\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            })\r\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TestService {\n\n    URL = \"http://localhost:55950/api/Test\";\n\n    constructor(private _http: HttpClient) { }\n\n    getTestList() {\n        return this._http.get(this.URL + \"/GetAllTests\");\r\n    }\n\n    GetTestTypes() {\n        return this._http.get(this.URL + \"/GetTestTypes\");\r\n    }\n\n    GetTestById(id: number) {\n        return this._http.get(this.URL + \"/GetTestById/\" + id);\r\n    }\n\n    createTest(data: any) {\r\n        return this._http.post(this.URL + '/CreateTest', data);\r\n    }\n\n    deleteTest(testID: number) {\n        return this._http.delete(this.URL + \"/DeleteTest/\" + testID);\r\n    }\n\n    getAthletes() {\n        return this._http.get(this.URL + \"/GetAthletes\");\r\n    }\n\n    addAthlete(id : number, data: any) {\n        return this._http.post(this.URL + \"/AddAthlete/\" + id, data);\r\n    }\n\n    getAthleteByTestId(testId: number, athleteId: string) {\n        return this._http.get(this.URL + \"/GetAthleteByTest/\" + testId + \"/\" + athleteId);\r\n    }\n\n    editAthlete(testId: number, athleteId: string, data: any) {\n        return this._http.put(this.URL + \"/EditAthlete/\" + testId + \"/\" + athleteId, data);\r\n    }\n}\n","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"margin-top: 3%; text-align: center;\\\">\\r\\n    <h2 style=\\\"font-weight: bold;\\\">Test Details</h2>\\r\\n\\r\\n    <div class=\\\"container\\\" *ngFor=\\\"let test of testDetails\\\">\\r\\n        <h2> {{ test.TestType.Name }} </h2>\\r\\n        <h3> {{ test.Test.Date | date: 'dd/MM/yyyy' }} </h3>\\r\\n\\r\\n        <div *ngIf=\\\"test.TestType.Name === 'Cooper Test'; then coopertest else sprinttest\\\">\\r\\n        </div>\\r\\n\\r\\n        <ng-template #coopertest>\\r\\n            <table class=\\\"table table-striped table-hover\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                <thead>\\r\\n                    <tr style=\\\"font-weight: bold\\\">\\r\\n                        <td>Ranking</td>\\r\\n                        <td>Distance(meter)</td>\\r\\n                        <td>Fitness Rating</td>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let user of test.Test.UserTestMappers\\\">\\r\\n                        <td>\\r\\n                            <a [routerLink]=\\\"['/edit-athlete/', test.TestID, user.UserID]\\\" style=\\\"display: block; text-decoration: none;\\r\\n                            color: black;\\\">{{ user.Users.UserName }}</a>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a [routerLink]=\\\"['/edit-athlete/', test.TestID, user.UserID]\\\" style=\\\"display: block; text-decoration: none;\\r\\n                                color: black;\\\">{{ user.CooperTestDistance }}</a>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a [routerLink]=\\\"['/edit-athlete/', test.TestID, user.UserID]\\\" style=\\\"display: block; text-decoration: none;\\r\\n                            color: black;\\\">{{ user.FitnessRating }}</a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td colspan=\\\"3\\\">\\r\\n                            <a class=\\\"btn btn-success\\\"\\r\\n                               [routerLink]=\\\"['/test-details/', test.TestID, 'add-athlete']\\\">Add Athlete To Test</a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td colspan=\\\"3\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\"\\r\\n                                    (click)=\\\"deleteTest(test.TestID)\\\">\\r\\n                                Delete\\r\\n                                Test\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template #sprinttest>\\r\\n            <table class=\\\"table table-striped table-hover\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                <thead>\\r\\n                    <tr style=\\\"font-weight: bold;\\\">\\r\\n                        <td>Ranking</td>\\r\\n                        <td>Time(Seconds)</td>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let user of test.Test.UserTestMappers\\\">\\r\\n                        <td>\\r\\n                            <a [routerLink]=\\\"['/edit-athlete/', test.TestID, user.UserID]\\\" style=\\\"display: block; text-decoration: none;\\r\\n                        color: black;\\\">{{ user.Users.UserName }}</a>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a [routerLink]=\\\"['/edit-athlete/', test.TestID, user.UserID]\\\" style=\\\"display: block; text-decoration: none;\\r\\n                            color: black;\\\">{{ user.SprintTestTime }}</a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td colspan=\\\"3\\\">\\r\\n                            <a class=\\\"btn btn-success\\\"\\r\\n                               [routerLink]=\\\"['/test-details/', test.TestID, 'add-athlete']\\\">Add Athlete To Test</a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td colspan=\\\"3\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\"\\r\\n                                    (click)=\\\"deleteTest(test.TestID)\\\">\\r\\n                                Delete\\r\\n                                Test\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../shared/test.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-test-details',\n    templateUrl: './test-details.component.html',\n    styleUrls: []\n})\nexport class TestDetailsComponent implements OnInit {\n\n    toDisplay: boolean;\n    testID: string;\n    testDetails: any[];\n\n    constructor(private _testService: TestService, private _route: ActivatedRoute, private _router: Router) {\n        this.testID = this._route.snapshot.paramMap.get('id');\n    }\n\n    ngOnInit() {\n        this._testService.GetTestById(+this.testID).subscribe(\n            res => {\n                this.testDetails = res as any[];\n                console.log(res);\n            },\n            err => {\n                console.log(err);\n            })\n    }\n\n    deleteTest(testID: number) {\n        if (confirm(\"Are You Sure?\")) {\r\n            this._testService.deleteTest(testID).subscribe(\r\n                res => {\r\n                    this._router.navigate(['/test-list']);\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n    }\n}\n","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"margin-top: 3%; text-align: center;\\\">\\r\\n    <a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/create-test']\\\" style=\\\"margin-bottom: 5%;\\\">Create new Test</a>\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n            <tr style=\\\"font-weight: bold;\\\">\\r\\n                <td>Date</td>\\r\\n                <td>Number Of Participants</td>\\r\\n                <td>Test Type</td>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let test of TestList\\\">\\r\\n                <td><a [routerLink]=\\\"['/test-details/', test.Test.ID]\\\" style=\\\"text-decoration: none; display: block; color: black;\\\"> {{ test.Test.Date | date: 'dd/MM/yyyy' }} </a></td>\\r\\n                <td><a [routerLink]=\\\"['/test-details/', test.Test.ID]\\\" style=\\\"text-decoration: none; display: block; color: black;\\\"> {{ test.Test.UserTestMappers.length }} </a></td>\\r\\n                <td><a [routerLink]=\\\"['/test-details/', test.Test.ID]\\\" style=\\\"text-decoration: none; display: block; color: black;\\\"> {{ test.TestType.Name }} </a></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../shared/test.service';\r\n\n@Component({\n    selector: 'app-test-list',\n    templateUrl: './test-list.component.html',\n    styleUrls: []\n})\nexport class TestListComponent implements OnInit {\n\n    TestList: any[];\n\n    constructor(private _testService: TestService) {\n    }\n\n    ngOnInit() {\n        this._testService.getTestList().subscribe(\n            res => {\n                this.TestList = res as any[];\n            },\n            err => {\n                console.log(err);\n            });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TestListComponent } from './test-list/test-list.component';\nimport { CreateTestComponent } from './create-test/create-test.component';\nimport { TestDetailsComponent } from './test-details/test-details.component';\nimport { TestService } from './shared/test.service';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AddAthleteComponent } from './add-athlete/add-athlete.component';\nimport { EditAthleteComponent } from './edit-athlete/edit-athlete.component';\n\n@NgModule({\n  declarations: [TestListComponent, CreateTestComponent, TestDetailsComponent, AddAthleteComponent, EditAthleteComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  exports : [\n    CreateTestComponent,\n    TestDetailsComponent,\n    TestListComponent,\n    AddAthleteComponent,\n    EditAthleteComponent\n  ],\n  providers: [ TestService ]\n})\n\nexport class TestModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n    URL = 'http://localhost:55950/api/User';\r\n\r\n    constructor(private _http: HttpClient) {\r\n    }\r\n\r\n    GetAllUsers()\r\n    {\r\n        return this._http.get(this.URL + \"/GetAllUsers\");\r\n    }\r\n\r\n    GetUsers() {\r\n        return this._http.get(this.URL + \"/GetUser\");\r\n    }\r\n\r\n    GetUsersById(id: string)\r\n    {\r\n        return this._http.get(this.URL + \"/GetUser/\" + id);\r\n    }\r\n\r\n    UpdateUser(user: any)\r\n    {\r\n        return this._http.put(this.URL + \"/EditUser/\" + user.ID, user);\r\n    }\r\n\r\n    DeleteUser(id : number)\r\n    {\r\n        return this._http.delete(this.URL + \"/DeleteUser/\" + id);\r\n    }\r\n}","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"text-align: center\\\">\\r\\n    <h3>Edit Athlete</h3>\\r\\n\\r\\n    <div class=\\\"container\\\" *ngIf=\\\"IsAvailable\\\">\\r\\n        <form #form=\\\"ngForm\\\" (submit)=\\\"UserEdit()\\\">\\r\\n            <input id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"UserDetails.ID\\\" hidden />\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>User Name</label>\\r\\n                <input class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"UserDetails.Name\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>User Role</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"role\\\" name=\\\"role\\\" [(ngModel)]=\\\"UserDetails.Role\\\">\\r\\n                    <option>Coach</option>\\r\\n                    <option>Athlete</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n//import { UserService } from '../shared/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { User } from '../shared/user.model';\r\n\r\n@Component({\r\n    selector: 'app-user-edit',\r\n    templateUrl: './user-edit.component.html',\r\n    styleUrls: []\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n    constructor(private _service: UserService, private _route: ActivatedRoute, private _router: Router) { }\r\n\r\n    UserDetails: User;\r\n    IsAvailable: boolean;\r\n\r\n    ngOnInit() {\r\n        this._service.GetUsersById(this._route.snapshot.paramMap.get('id')).subscribe(\r\n            res => {\r\n                this.IsAvailable = true;\r\n                this.UserDetails = res as User;\r\n                console.log(res);\r\n            },\r\n            err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    UserEdit() {\r\n        this._service.UpdateUser(this.UserDetails).subscribe(\r\n            res => {\r\n                this._router.navigate(['/user-list']);\r\n            },\r\n            err => {\r\n                console.log(\"Error: \" +err);\r\n            });\r\n    }\r\n}","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"text-align: center;\\\" *ngIf=\\\"isValid\\\">\\r\\n    <div *ngIf=\\\"!UserList.isCoach\\\">\\r\\n        <div class=\\\"container\\\" *ngFor=\\\"let user of UserList.Users\\\">\\r\\n            <h3 style=\\\"font-weight: bold;\\\">Welcome {{ user.Name }}</h3>\\r\\n\\r\\n            <h3>Test Details</h3>\\r\\n\\r\\n            <div>\\r\\n                <table class=\\\"table table-striped\\\" style=\\\"margin-top:5%;\\\">\\r\\n                    <thead>\\r\\n                        <tr style=\\\"font-weight: bold;\\\">\\r\\n                            <td>Test Id</td>\\r\\n                            <td>Sprint Test Time</td>\\r\\n                            <td>Cooper Test Distance</td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let test of UserList.UserTest\\\">\\r\\n                        <tr>\\r\\n                            <td> {{ test.TestID }} </td>\\r\\n                            <td> {{ test.SprintTestTime }} </td>\\r\\n                            <td> {{ test.CooperTestDistance }} </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"UserList.isCoach\\\">\\r\\n        <h3>User List</h3>\\r\\n        <table class=\\\"table table-striped\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"font-weight: bold; text-transform: uppercase\\\">\\r\\n                    <td>Name</td>\\r\\n                    <td>User Role</td>\\r\\n                    <td></td>\\r\\n                    <td></td>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let user of UserList.Users\\\">\\r\\n                    <td> {{ user.Name }} </td>\\r\\n                    <td> {{ user.Role }} </td>\\r\\n                    <td> <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/user-edit/', user.ID]\\\">Edit</a> </td>\\r\\n                    <td> <button class=\\\"btn btn-danger\\\" (click)=\\\"DeleteUser(user.ID)\\\">Delete</button> </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/test-list']\\\">View All Tests</a>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-user-list',\r\n    templateUrl: './user-list.component.html',\r\n    styleUrls: []\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n    UserList: any[];\r\n    isValid: boolean;\r\n    isCoach: boolean;\r\n\r\n    constructor(private _service: UserService, private _router: Router) {\r\n        this.isValid = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._service.GetUsers().subscribe(\r\n            res => {\r\n                this.UserList = res as any[];\r\n                console.log(this.UserList);\r\n                this.isValid = true;\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    DeleteUser(id: number) {\r\n        if (confirm(\"Are you sure?\")) {\r\n            this._service.DeleteUser(id).subscribe(\r\n                (res: any) => {\r\n                    debugger\r\n                    if (res.isCoach) {\r\n                        location.href = \"/Home/Login\";\r\n                    }\r\n                    else\r\n                    {\r\n                        this._router.navigate(['/user-list']);\r\n                    }\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    //DeleteUser(id: number) {\r\n    //    if (confirm(\"Are you sure?\")) {\r\n    //        this._service.DeleteUser(id);\r\n    //    }\r\n    //}\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserService } from './shared/user.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        UserEditComponent,\r\n        UserListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        RouterModule\r\n    ],\r\n    exports: [\r\n        UserEditComponent,\r\n        UserListComponent\r\n    ],\r\n    providers: [UserService]\r\n})\r\n\r\nexport class UserModule { }","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n    selector: 'app-root',\n    moduleId: module.id,\n    templateUrl: 'app.html'\n})\nexport class AppComponent implements OnInit {\n\n    ngOnInit() {\n    }\n}\n","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top: 3%;\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { UserModule } from './User/user.module';\nimport { UserListComponent } from './User/user-list/user-list.component';\nimport { UserEditComponent } from './User/user-edit/user-edit.component';\r\nimport { TestListComponent } from './Test/test-list/test-list.component';\r\nimport { CreateTestComponent } from './Test/create-test/create-test.component';\r\nimport { TestDetailsComponent } from './Test/test-details/test-details.component';\r\nimport { AddAthleteComponent } from './Test/add-athlete/add-athlete.component';\r\nimport { EditAthleteComponent } from './Test/edit-athlete/edit-athlete.component';\r\nimport { TestModule } from './Test/test.module';\r\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        UserModule,\n        TestModule,\n        RouterModule.forRoot([\n            {\n                path: '',\r\n                component: UserListComponent,\r\n                pathMatch: 'full'   \n            },\n            {\r\n                path: 'user-list',\r\n                component: UserListComponent\r\n            },\n            {\n                path: 'user-edit/:id',\n                component: UserEditComponent\n            },\n            {\n                path: 'test-list',\r\n                component: TestListComponent\r\n            },\r\n            {\r\n                path: 'create-test',\r\n                component: CreateTestComponent\r\n            },\r\n            {\r\n                path: 'test-details/:id',\r\n                component: TestDetailsComponent\r\n            },\r\n            {\r\n                path: 'test-details/:id/add-athlete',\r\n                component: AddAthleteComponent\r\n            },\r\n            {\r\n                path: 'edit-athlete/:testId/:userId',\r\n                component: EditAthleteComponent\r\n            }\n        ])\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport { environment } from '../environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));","﻿// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n"],"sourceRoot":""}